apt update && apt install -y \
  wget build-essential libssl-dev zlib1g-dev \
  libbz2-dev libreadline-dev libsqlite3-dev curl llvm \
  libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev \
  libffi-dev liblzma-dev

cd /usr/src
wget https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tgz
tar xvf Python-3.12.2.tgz
cd Python-3.12.2
./configure --enable-optimizations
make -j$(nproc)
make altinstall
ln -s /usr/local/bin/python3.12 /usr/bin/python3.12

cd /root/.ipython/fase-2-site

apt update
apt install postgresql postgresql-contrib

apt install -y git postgresql-server-dev-14 make gcc
git clone https://github.com/pgvector/pgvector.git
cd pgvector
make
make install

su - postgres -c "createdb morphik"


su - postgres -c psql

CREATE DATABASE morphik;
\c morphik
CREATE EXTENSION IF NOT EXISTS vector;

-- Create the user for the manual_db
CREATE USER manual_user WITH PASSWORD 'manual_password';

-- Create the database and set manual_user as the owner
CREATE DATABASE manual_db OWNER manual_user;

-- Connect to the new database (you are still connected as the postgres superuser)
\c manual_db

-- Enable the vector extension
CREATE EXTENSION IF NOT EXISTS vector;

# If using Python 3.12+, you might need a specific version of unstructured
pip install unstructured==0.16.10

# Download required NLTK resources
python -m nltk.downloader averaged_perceptron_tagger punkt

pip install flash-attn --no-build-isolation
apt update && apt install redis-server -y
service redis-server start

# Install via apt
apt-get update
apt-get install -y poppler-utils tesseract-ocr libmagic-dev

pip install git+https://github.com/illuin-tech/colpali

# Install via apt
 apt-get update
 apt-get install -y poppler-utils tesseract-ocr libmagic-dev


service postgresql start
ALTER USER postgres WITH PASSWORD 'postgres';


# Install NVM
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash

# Set up NVM environment (add these to your .bashrc or .zshrc)
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Restart your terminal or source your profile
source ~/.bashrc  # or ~/.zshrc

# Update npm to the latest version
npm install -g npm

# Install the latest LTS version of Node.js
nvm install --lts

# Use the installed version
nvm use --lts
npm i


su -c "apt install -y libreoffice --no-install-recommends"

pip install --no-deps fast-plaid fastkmeans